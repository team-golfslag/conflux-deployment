networks:
  app_network:
  db_network:

services:
  postgres:
    image: postgres:17.3
    restart: always
    networks:
      - db_network
    environment:
      POSTGRES_USER: <DB_USER>
      POSTGRES_PASSWORD: <DB_PASSWORD>
      POSTGRES_DB: <DB_NAME>
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "conflux", "-U", "conflux"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  conflux-web:
    image: conflux-web
    restart: always
    networks:
      - app_network
    ports:
      - "127.0.0.1:8081:80"

  conflux-backend:
    image: conflux-backend
    restart: always
    networks:
      - app_network
      - db_network
    ports:
      - "127.0.0.1:8082:80"
    environment:
      DB_HOST: <DB_HOST>
      DB_NAME: <DB_NAME>
      DB_USER: <DB_USER>
      DB_PASSWORD: <DB_PASSWORD>
      SRAM_CLIENT_SECRET: <SRAM_CLIENT_SECRET>
      SRAM_SCIM_SECRET: <SRAM_SCIM_SECRET>
      ORCID_CLIENT_SECRET: <ORCID_CLIENT_SECRET>
      RAID_USERNAME: <RAID_USERNAME>
      RAID_PASSWORD: <RAID_PASSWORD>
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data: